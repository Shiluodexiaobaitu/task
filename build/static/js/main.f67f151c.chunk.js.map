{"version":3,"sources":["pages/senior/index.tsx","pages/customized/index.tsx","components/popupComponent/index.tsx","pages/index/index.tsx","serviceWorker.ts","index.tsx"],"names":["Senior","props","setColor","styleProcessingClick","styleProcessingState","this","className","onClick","React","Component","Customized","IconFont","createFromIconfontCN","scriptUrl","PopupComponent","close","popupComponentEvent","state","data","title","content","type","style","fontSize","color","Content","key","App","value","setState","modalDisplayhiding","popupEvent","modalState","popupEventNo","renderingList","num","map","item","index","includes","bind","lineHeight","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f67f151c.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    styleProcessingClick?: any  //主要这段代码\n    styleProcessingState?: any\n}\ninterface IState {\n    lg?: any\n\n}\n\nclass Senior extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n\n    }\n\n    setColor = () => {\n        this.props.styleProcessingClick('SeniorAction')\n    }\n\n    render() {\n        const {styleProcessingState} = this.props\n        return <div className={styleProcessingState === 'SeniorAction' ? 'senior' : 'seniorNo'} onClick={this.setColor}>\n            <p>高级版</p>\n            <p>适合独立摄影师</p>\n        </div>\n    }\n}\n\nexport default Senior","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    styleProcessingClick?: any  //主要这段代码\n    styleProcessingState?: any\n}\n\nclass Customized extends React.Component<IProps>{\n    constructor(props: IProps) {\n        super(props)\n\n    }\n\n    setColor = () => {\n        this.props.styleProcessingClick('CustomizedAction')\n    }\n\n    render(){\n        const {styleProcessingState} = this.props\n        return <div className={styleProcessingState === 'CustomizedAction' ? 'customized' : 'customizedNo'} onClick={this.setColor}>\n            <p>定制版</p>\n            <p>适合小型工作室</p>\n        </div>\n    }\n}\n\nexport default Customized","import React from 'react';\nimport './style.scss'\nimport {\n    createFromIconfontCN\n} from '@ant-design/icons';\nconst IconFont = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1751879_i8cl8ie9vs.js',\n});\n\ninterface IProps {\n    popupComponentEvent?: any,\n    data?: any\n}\n\nclass PopupComponent extends React.Component<IProps> {\n    constructor(props: IProps) {\n        super(props)\n        this.state = {\n            styleProcessingState: 'SeniorAction' // 公共状态控制高级和定制版本的切换\n        }\n    }\n    close = () => {\n        this.props.popupComponentEvent(false)\n    }\n\n    render() {\n        const { title, content } = this.props.data\n        const { data } = content\n        return <div className='PopupComponent'>\n            <div className=\"modal\">\n                <div className=\"modal_title\">{ title }</div>\n                <p className=\"modal_content\">{ data }</p>\n                <div className=\"modal_icon\" onClick={this.close}>\n                    <IconFont type=\"icon-close_icon\" style={{ fontSize: '20px', color: '#fff' }} />\n                </div>\n            </div>\n            <div className=\"mask\"></div>。\n        </div>\n    }\n}\n\nexport default PopupComponent","import React from 'react'\n\nimport './style.scss'\nimport Senior from '../senior'\nimport Customized from '../customized'\nimport PopupComponent from '../../components/popupComponent'\n\nimport {\n    createFromIconfontCN\n} from '@ant-design/icons';\n\n\ninterface IProps {\n\n}\ninterface IState {\n    styleProcessingState?: string,\n    modalDisplayhiding?: boolean,\n    modalState?: object\n}\n\nconst Content = [\n    {\n        key: 1,\n        data: '高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1高级文本1'\n    },\n    {\n        key: 2,\n        data: '高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2高级文本2'\n    },\n    {\n        key: 3,\n        data: '高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3高级文本3'\n    },\n    {\n        key: 4,\n        data: '高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4高级文本4'\n    },\n    {\n        key: 5,\n        data: '定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5定制文本5'\n    },\n    {\n        key: 6,\n        data: '定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6定制文本6'\n    },\n    {\n        key: 7,\n        data: '定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7定制文本7'\n    },\n    {\n        key: 8,\n        data: '定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8定制文本8'\n    },\n    {\n        key: 9,\n        data: '定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9定制文本9'\n    },\n    {\n        key: 10,\n        data: '高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10高级文本10'\n    },\n]\n\n\nclass App extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        this.state = {\n            styleProcessingState: 'SeniorAction', // 公共状态控制高级和定制版本的切换\n            modalDisplayhiding: false,\n            modalState: {}\n        }\n    }\n\n    styleProcessingClick = (value: string) => {\n        this.setState({\n            styleProcessingState: value\n        })\n    }\n\n    /**\n     * 关闭全局弹窗\n     */\n    popupComponentEvent = (value:boolean) => {\n        this.setState({\n            modalDisplayhiding: value\n        })\n    }\n\n    popupEvent = (value:any) => {\n        const { styleProcessingState } = this.state\n        let title = styleProcessingState === 'SeniorAction' ? \"高级版\" : \"定制版\"\n        \n        this.setState({\n            modalDisplayhiding: true,\n            modalState: {\n                title: `${title}-标题${value}`,\n                content: Content[value-1]\n            }\n        })\n    }\n\n    popupEventNo = () => {\n    }\n\n    renderingList = () => {\n        const { styleProcessingState } = this.state\n        const IconFont = createFromIconfontCN({\n            scriptUrl: '//at.alicdn.com/t/font_1751879_6e8h32ob98d.js',\n        });\n        let arr: any[] = ['icon-ganga', 'icon-help', 'icon-kongxiangzi', 'icon-locate', 'icon-more', 'icon-more', 'icon-myline', 'icon-zhaohuo2normal', 'icon-zhaohuo2press', 'icon-gongju']\n        let num: number[] = styleProcessingState === 'SeniorAction' ? [1, 2, 3, 4, 10] : [5, 6, 7, 8, 9]\n        let DOMnode = arr.map((item, index) => {\n            return <li key={index} onClick={num.includes(index + 1) ? this.popupEvent.bind(this,index+1) : this.popupEventNo}>\n                <IconFont type={item} style={{ fontSize: '20px',lineHeight:'50px', color: num.includes(index + 1) ? 'rgb(228, 89, 114)' : ' rgb(136, 98, 105)' }} />\n                <p style={{ color: num.includes(index + 1) ? 'rgb(228, 89, 114)' : ' rgb(136, 98, 105)' }}>标题{index + 1}</p>\n            </li>\n        })\n\n        return DOMnode\n    }\n\n    render() {\n\n        const { styleProcessingState, modalDisplayhiding, modalState } = this.state\n        console.log()\n        return <div className=\"box\">\n            {\n                modalDisplayhiding && <PopupComponent popupComponentEvent={this.popupComponentEvent} data={modalState}/>\n            }\n            <div className=\"head\">\n                <Senior styleProcessingState={styleProcessingState} styleProcessingClick={this.styleProcessingClick.bind(this)} />\n                <Customized styleProcessingState={styleProcessingState} styleProcessingClick={this.styleProcessingClick.bind(this)} />\n            </div>\n\n            <div className=\"content\">\n                <div className=\"content_top\">\n                    <span>{styleProcessingState === 'SeniorAction' ? '高级版' : '定制版'}</span>\n                    <span>(适合<i>{styleProcessingState === 'SeniorAction' ? '独立摄影师' : '适合小型工作室'}</i>)</span>\n                </div>\n\n                <div className=\"content_list\">\n                    <ul>\n                        {this.renderingList()}\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"tail\">\n\n            </div>\n        </div>\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './util/reset.css'\n\nimport App from './pages/index/index'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}